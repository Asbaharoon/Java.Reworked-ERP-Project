<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Login">

	<resultMap id="Customers" type="Customer">
		<result property="accountNumber" column="accountNumber" />
		<result property="companyName" column="companyName" />
		<result property="country" column="country" />
		<result property="email" column="email" />
		<result property="organisationNumber" column="organisationNumber" />
		<result property="phoneNumber" column="phoneNumber" />
		<result property="street" column="street" />
		<result property="zipCode" column="zipCode" />
	</resultMap>

	<resultMap id="Employee" type="Employee">
		<result property="SSN" column="SSN" />
		<result property="employeeDate" column="employeeDate" />
		<result property="employeeNumber" column="employeeNumber" />
		<result property="wage" column="wage" />
		<result property="accountNumber" column="accountNumber" />
	</resultMap>

	<resultMap id="paymentsIncoming" type="PaymentIncoming">
		<result property="organisationNumber" column="OrganisationNumber" />
		<result property="companyName" column="projectNumber" />
		<result property="projectNumber" column="projectNumber" />
		<result property="paymentNumber" column="paymentNumber" />
		<result property="invoiceNumber" column="invoiceNumber" />
		<result property="status" column="status" />
		<result property="amount" column="amount" />
		<result property="date" column="date" />
	</resultMap>

	<resultMap id="userResult" type="User">
		<result property="SSN" column="SSN" />
		<result property="firstName" column="firstName" />
		<result property="lastName" column="lanstName" />
		<result property="email" column="email" />
		<result property="phoneNumber" column="phoneNumber" />
		<result property="street" column="street" />
		<result property="city" column="city" />
		<result property="country" column="country" />
		<result property="zipCode" column="zipCode" />
		<result property="employeeDate" column="employeeDate" />
		<result property="wage" column="wage" />
		<result property="accountNumber" column="accountNumber" />
		<result property="authorizationLevel" column="authorizationLevel" />
	</resultMap>
	
		<resultMap id="AllProjects" type="Project">
		<result property="actualCost" column="actualCost" />
		<result property="actualStart" column="actualStart" />
		<result property="actualStop" column="actualStop" />
		<result property="estimatedCost" column="estimatedCost" />
		<result property="estimatedStart" column="estimatedStart" />
		<result property="estimatedStop" column="estimatedStop" />
		<result property="organisationNumber" column="organisationNumber" />
		<result property="projectNumber" column="projectNumber" />
	</resultMap>


	<insert id="insertPerson" parameterType="Person"
		useGeneratedKeys="false" keyProperty="SSN">
		INSERT Persons
		(SSN,firstName,lastName) VALUES (#{SSN},#{firstName},#{lastName});
	</insert>

	<insert id="insertEmployee" parameterType="Employee"
		useGeneratedKeys="false" keyProperty="SSN">
		INSERT Employees (SSN)
		VALUES(#{SSN});
	</insert>
	
	<insert id="insertLogin" parameterType="Login" useGeneratedKeys="false" keyProperty="SSN">
		INSERT Logins (SSN,password,authorizationLevel)
		VALUES(#{SSN}, #{password},
		#{AuthorizationLevel});
	</insert>
	
	<select id="selectAllEmployees" resultMap="Employee">
		SELECT SSN,
		employeeDate, employeeNumber, wage, accountNumber FROM Employees;
	</select>

	<select id="selectAllIncomingPayments" resultMap="paymentsIncoming">
		SELECT distinct
		Projects.organisationNumber, Customers.companyName,
		InvoicesOutgoing.projectNumber, Paymentsincoming.paymentNumber,
		Paymentsincoming.invoiceNumber, Paymentsincoming.status,
		Paymentsincoming.amount, Paymentsincoming.date
		FROM Customers
		inner join
		Projects
		inner join InvoicesOutgoing
		inner join Paymentsincoming
		WHERE
		Paymentsincoming.invoiceNumber = InvoicesOutgoing.invoiceNumber AND
		Projects.projectNumber = InvoicesOutgoing.projectNumber AND
		Customers.organisationNumber = Projects.organisationNumber;
	</select>

	<select id="selectAllUsers" resultMap="userResult">
		SELECT
		p.SSN,
		p.firstName,
		p.lastName,
		p.email,
		p.phoneNumber,
		p.street,
		p.city,
		p.country,
		p.zipCode,
		e.employeeDate,
		e.wage,
		e.accountNumber,
		l.authorizationLevel
		FROM Persons
		p
		LEFT JOIN Employees e ON p.SSN = e.SSN
		LEFT JOIN Logins l ON p.SSN =
		l.SSN;
	</select>

	<update id="updateLogin" parameterType="User">
		UPDATE Logins
		SET
		authorizationLevel = #{authorizationLevel}
		WHERE SSN = #{SSN}
	</update>

	<update id="updateEmployee" parameterType="User">
		UPDATE Employees
		SET
		employeeDate = #{employeeDate},
		wage = #{wage},
		accountNumber =
		#{accountNumber}
		WHERE SSN = #{SSN};
	</update>

	<update id="updatePerson" parameterType="User">
		UPDATE Persons
		SET
		firstName = #{firstName},
		lastName = #{lastName},
		email = #{email},
		phoneNumber = #{phoneNumber},
		street = #{street},
		city = #{city},
		country = #{country},
		zipCode = #{zipCode}
		WHERE SSN = #{SSN};
	</update>

	<insert id="insertproject" parameterType="Project"
		useGeneratedKeys="false" keyProperty="projectNumber">
		INSERT Projects
		(projectNumber,organisationNumber,estimatedStart,estimatedStop,estimatedCost)
		VALUES
		(#{projectNumber},#{organisationNumber},#{estimatedStart},#{estimatedStop},#{estimatedCost});
	</insert>

	<select id="selectAllCustomers" resultMap="Customers">
		SELECT *
		FROM Customers
	</select>
	
	<insert id="insertallocation" parameterType="ProjectMember"
		useGeneratedKeys="false" keyProperty="SSN">
		INSERT ProjectMembers
		(hourlyRate,projectNumber,role,SSN,workload)
		VALUES(#{hourlyRate},#{projectNumber},#{role},#{SSN},#{workload});
	</insert>
	
		<select id="selectEveryProject" parameterType="Project"
		resultMap="AllProjects">
		SELECT *
		FROM Projects
		
	</select>


</mapper>